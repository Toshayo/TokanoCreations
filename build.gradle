buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net/' }
		maven { url = 'https://plugins.gradle.org/m2' }
		mavenCentral()
	}
	dependencies {
		classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.1.1') {
			changing = true
		}
	}
}

apply plugin: 'forge'

version = mod_version

compileJava.options.encoding = 'UTF-8'
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
	version = "1.7.10-10.13.4.1614-1.7.10"
	runDir = "run"

	replace "@@VERSION@@", project.version
}

repositories {
	maven {
		name = 'ModMaven'
		url = 'https://modmaven.dev'
	}
	maven {
		url = 'https://www.cursemaven.com/'
	}
}

dependencies {
	implementation 'curse.maven:baubles-227083:2224857'
	implementation 'curse.maven:thaumcraft-223628:2227552'

	implementation 'codechicken:CodeChickenCore:1.7.10-1.0.4.29:dev'
	compileOnly 'codechicken:CodeChickenCore:1.7.10-1.0.4.29:src'

	implementation 'codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev'
	compileOnly 'codechicken:CodeChickenLib:1.7.10-1.1.3.140:src'

	implementation 'codechicken:NotEnoughItems:1.7.10-1.0.3.74:dev'
	compileOnly 'codechicken:NotEnoughItems:1.7.10-1.0.3.74:src'

	implementation 'curse.maven:TravellersGear-224440:2262113'
}

processResources {
	inputs.property "version", project.mod_version
	inputs.property "credits", project.credits
	
	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'
		
		// replace version and mcversion
		expand 'version':project.mod_version, 'credits':project.credits
	}
		
	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

build {
	doLast {
		if(project.hasProperty("TOSHAYO_JKS")) {
			println "Using Project properties for jar signing."
			def jks_file = project.TOSHAYO_JKS
			def passwd = project.TOSHAYO_PWD
			if (jks_file != null && passwd != null) {
				def exec_line = [
						"jarsigner", "-keystore", jks_file, "-storepass",
						passwd, jar.archivePath, project.TOSHAYO_APP_ALIAS
				].execute()
				exec_line.waitFor()
				if(exec_line.exitValue() != 0) {
					throw new RuntimeException("Signing failed!")
				}
			}
		} else {
			println 'No signing secrets found, build will not be signed.'
		}
	}
}
